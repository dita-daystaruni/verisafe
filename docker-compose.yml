services:
  verisafe:
    build:
      context: .
    container_name: verisafe
    environment:
      PORT: ${VERISAFE_PORT}
    env_file:
      - ./.env
    ports:
      - "${VERISAFE_PORT}:${VERISAFE_PORT}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - verisafe_network
    volumes:
      - uploads:/app/uploads

  postgres:
    image: postgres:latest
    container_name: verisafe_db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [CMD-SHELL, "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - ${DB_PORT}:${DB_PORT}
    networks:
      - verisafe_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  migrations:
    build:
      context: .
    container_name: verisafe_migrations
    depends_on:
      - postgres
    entrypoint: ["goose", "up"]
    environment:
      - GOOSE_DRIVER=${GOOSE_DRIVER}
      - GOOSE_DBSTRING=${GOOSE_DBSTRING}
      - GOOSE_MIGRATION_DIR=${GOOSE_MIGRATION_DIR}
    env_file:
      - ./.env
    volumes:
      - ./database/migrations:/app/database/migrations
    networks:
      - verisafe_network

networks:
  verisafe_network:
    driver: bridge

volumes:
  postgres_data:
  uploads:

