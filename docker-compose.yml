services:
  verisafe:
    image: deetar/verisafe-clean:latest
    container_name: verisafe
    depends_on:
      migrations:
        condition: service_completed_successfully
    environment:
      PORT: 3000
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    networks:
      - verisafe_network
    volumes:
      - uploads:/app/uploads
    # Ensure we restart when migrations finish
    restart: on-failure

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    healthcheck:
      test: [CMD-SHELL, "sh -c 'pg_isready -U verisafe -d verisafe'"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    networks:
      - verisafe_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  migrations:
    image: gomicro/goose:latest
    container_name: verisafe_migrations
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["goose", "up"]
    environment:
      - GOOSE_DRIVER=${GOOSE_DRIVER}
      - GOOSE_DBSTRING=${GOOSE_DBSTRING}
      - GOOSE_MIGRATION_DIR=${GOOSE_MIGRATION_DIR}
    env_file:
      - ./.env
    volumes:
      - ./database/migrations:/app/database/migrations
    networks:
      - verisafe_network
    # Exit immediately after completion
    restart: "no"

networks:
  verisafe_network:
    driver: bridge

volumes:
  postgres_data:
  uploads:
